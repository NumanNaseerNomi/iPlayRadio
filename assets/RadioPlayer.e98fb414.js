var _=Object.defineProperty;var C=(i,e,t)=>e in i?_(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t;var d=(i,e,t)=>(C(i,typeof e!="symbol"?e+"":e,t),t);import{_ as p,o as l,c as u,a as r,E as y,t as h,F as f,D as g,U as v,V as k,z as S}from"./entry.0352920b.js";const w={props:{channelDetails:{type:Object,default:{}}},methods:{setDefaultThumbnail(){this.channelDetails.favicon="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQTiKIGiH9HTFluylskypHMDTStOHsXMTzHDA&usqp=CAU"},isLive(){fetch(this.channelDetails.urlResolved,{method:"HEAD"}).then(i=>{this.channelDetails.isLive=i.status===200}).catch(i=>{this.channelDetails.isLive=!1})}}},R={class:"card shadow m-2",style:{"min-width":"18rem"}},q={class:"row g-0 d-flex align-items-center justify-content-center"},L={class:"col-3"},x={class:"position-relative"},$=["src"],D={key:0,class:"position-absolute top-0 start-100 translate-middle p-1 bg-success border border-light rounded-circle"},B=r("span",{class:"visually-hidden"},"Streaming Status",-1),E=[B],T={class:"col-9"},U={class:"card-body p-1"},j={class:"card-title text-truncate"},A={class:"text-truncate opacity-75"},N={key:0,class:"border rounded-2 px-1"},P={class:"border rounded-2 px-1"},z={key:0,class:"border rounded-2 px-1"};function H(i,e,t,n,a,s){return l(),u("div",R,[r("div",q,[r("div",L,[r("span",x,[r("img",{src:this.channelDetails.favicon,class:"img-thumbnail object-fit-cover rounded-5",alt:"thumbnail",onError:e[0]||(e[0]=o=>s.setDefaultThumbnail()),style:{"max-width":"4rem"}},null,40,$),t.channelDetails.isLive?(l(),u("span",D,E)):y("",!0)])]),r("div",T,[r("div",U,[r("h6",j,h(t.channelDetails.name),1),r("div",A,[t.channelDetails.countryCode?(l(),u("span",N,h(t.channelDetails.countryCode),1)):y("",!0),(l(!0),u(f,null,g(t.channelDetails.tags,o=>(l(),u("span",P,h(o),1))),256)),(l(!0),u(f,null,g(t.channelDetails.language,o=>(l(),u("span",null,[o?(l(),u("span",z,h(o),1)):y("",!0)]))),256))])])])])])}const I=p(w,[["render",H]]),b=()=>v("nowPlayingChannel",()=>null),G={props:{listTitle:{type:String,default:"List Title"},channelsList:{type:Array,default:[]},isLoading:{type:Boolean,default:!1}},data(){return{nowPlayingChannel:b(),volume:.05}},methods:{playChannel(i){b().value=i,localStorage.setItem("nowPlayingChannel",JSON.stringify(i))},isScrollEnd(i){const{scrollTop:e,clientHeight:t,scrollHeight:n}=i.target;return e+t>=n},loadMore(i){this.isScrollEnd(i)&&this.$emit("loadMore")}}},M={class:"card shadow"},O={class:"card-header"},F={key:0,class:"text-center"},V=r("div",{class:"spinner-border",role:"status"},[r("span",{class:"visually-hidden"},"Loading...")],-1),Q=[V];function J(i,e,t,n,a,s){const o=I;return l(),u("div",M,[r("h5",O,h(t.listTitle),1),r("div",{class:"card-body overflow-auto",onScroll:e[0]||(e[0]=c=>s.loadMore(c))},[(l(!0),u(f,null,g(t.channelsList,c=>{var m;return l(),k(o,{channelDetails:c,class:S(["btn btn-outline-primary",{"border-success border-2":c.id===((m=a.nowPlayingChannel)==null?void 0:m.id)}]),onClick:Y=>s.playChannel(c)},null,8,["channelDetails","class","onClick"])}),256)),t.isLoading?(l(),u("div",F,Q)):y("",!0)],32)])}const et=p(G,[["render",J]]),K="http://all.api.radio-browser.info/json/servers",X=[{ip:"2a0a:4cc0:0:db9:282b:91ff:fed0:ddea",name:"at1.api.radio-browser.info"},{ip:"2a03:4000:37:42:c4fe:4cff:fea7:8941",name:"de1.api.radio-browser.info"},{ip:"2001:19f0:5001:32a4:5400:2ff:fe37:75c2",name:"nl1.api.radio-browser.info"},{ip:"91.132.145.114",name:"de1.api.radio-browser.info"},{ip:"95.179.139.106",name:"nl1.api.radio-browser.info"}],W={byUuid:"byUuid",byName:"byName",byNameExact:"byNameExact",byCodec:"byCodec",byCodexExact:"byCodecExact",byCountry:"byCountry",byCountryExact:"byCountryExact",byCountryCodeExact:"byCountryCodeExact",byState:"byState",byStateExact:"byStateExact",byLanguage:"byLanguage",byLanguageExact:"byLanguageExact",byTag:"byTag",byTagExact:"byTagExact"};class st{constructor(e="iRadioPlayerJS",t=!0){d(this,"appName");d(this,"hideBroken");d(this,"baseUrl");d(this,"fetchConfig",{method:"GET",redirect:"follow"});this.appName=e,this.hideBroken=t,this.fetchConfig.headers={"user-agent":this.appName}}async getServersList(e=!1){return e?await fetch(K).then(n=>n.ok?n.json():Promise.reject(n)):X}setBaseUrl(e){this.baseUrl=e}getBaseUrl(){return this.baseUrl}async getRandomBaseUrl(e=!1,t=!1){const n=await this.getServersList(t);if(n.sort(()=>Math.random()-.5),e){for(const a of n)if((await fetch(`https://${a.name}/json/stats`)).ok)return`https://${a.name}`}return`https://${n[0].name}`}async getCountries(e,t,n){return this.runRequest(this.buildRequest("countries",e,t),n)}async getCountryCodes(e,t,n){return e=e?`${e.toUpperCase()}`:"",this.runRequest(this.buildRequest("countrycodes",e,t),n)}async getCodecs(e,t){return this.runRequest(this.buildRequest("codecs","",e),t)}async getCountryStates(e,t,n){return this.runRequest(this.buildRequest("states",e,t),n)}async getLanguages(e,t,n){return this.runRequest(this.buildRequest("languages",e,t),n)}async getTags(e,t,n){return e=e?e.toLowerCase():"",this.runRequest(this.buildRequest("tags",e,t),n)}async getStationsBy(e,t,n,a,s=!1){if(!W[e])throw new Error(`search type does not exist: ${e}`);t=t?t.toLowerCase():"";const o=await this.runRequest(this.buildRequest(`stations/${e.toLowerCase()}`,t,n),a);return this.normalizeStations(o,s)}normalizeStations(e,t=!1){const n=[],a={};for(const s of e){if(t){const c=`${s.name.toLowerCase().trim()}${s.url.toLowerCase().trim()}`;if(a[c])continue;a[c]=!0}const o={changeId:s.changeuuid,id:s.stationuuid,name:s.name,url:s.url,urlResolved:s.url_resolved,homepage:s.homepage,favicon:s.favicon,country:s.country,countryCode:s.countrycode,state:s.state,votes:s.votes,codec:s.codec,bitrate:s.bitrate,clickCount:s.clickcount,clickTrend:s.clicktrend,hls:!!s.hls,lastCheckOk:!!s.lastcheckok,lastChangeTime:new Date(s.lastchangetime),lastCheckOkTime:new Date(s.lastcheckoktime),clickTimestamp:new Date(s.clicktimestamp),lastLocalCheckTime:new Date(s.lastlocalchecktime),language:s.language.split(","),lastCheckTime:new Date(s.lastchecktime),geoLat:s.geo_lat,geoLong:s.geo_long,tags:Array.from(new Set(s.tags.split(","))).filter(c=>c.length>0&&c.length<10)};n.push(o)}return n}async getAllStations(e,t,n=!1){const a=await this.runRequest(this.buildRequest("stations","",e),t);return this.normalizeStations(a,n)}async searchStations(e,t,n=!1){const a=await this.runRequest(this.buildRequest("stations/search",void 0,e),t);return this.normalizeStations(a,n)}async getStationsByClicks(e,t){return this.resolveGetStations("topclick",e,t)}async getStationsByVotes(e,t){return this.resolveGetStations("topvote",e,t)}async getStationsByRecentClicks(e,t){return this.resolveGetStations("lastclick",e,t)}async sendStationClick(e,t){return this.runRequest(this.buildRequest("url",e,void 0,!1),t)}async voteForStation(e,t){return this.runRequest(this.buildRequest("vote",e),t)}async getStationsById(e,t){const n=e.join(","),a=await this.runRequest(this.buildRequest(`stations/byuuid?uuids=${n}`,void 0,void 0,!1),t);return this.normalizeStations(a)}async getStationByUrl(e,t){const n=await this.runRequest(this.buildRequest(`stations/byurl/${e}`,void 0,void 0,!1),t);return this.normalizeStations(n)}async resolveGetStations(e,t,n){const a=t?`/${t}`:"",s=await this.runRequest(this.buildRequest(`stations/${e}${a}`,void 0,void 0,!1),n);return this.normalizeStations(s)}buildRequest(e,t,n,a=!0){t=t?`/${encodeURIComponent(t)}`:"";let s;n&&(s={...n},"tagList"in s&&Array.isArray(s.tagList)&&(s.tagList=[...s.tagList]),a&&s.hideBroken===void 0&&(s.hideBroken=this.hideBroken));const o=s?this.createQueryParams(s):"";return`${e}${t}${o}`}async runRequest(e,t={}){const n={...this.fetchConfig,...t,headers:{...this.fetchConfig.headers,...t.headers}};this.baseUrl=this.baseUrl||await this.getRandomBaseUrl(!0);const a=await fetch(`${this.baseUrl}/json/${e}`,n);if(a.ok)return a.json();throw a}createQueryParams(e){let t="";if(e)for(const[n,a]of Object.entries(e)){let s=n.toLowerCase();switch(s){case"hasgeoinfo":s="has_geo_info";break;case"hidebroken":s="hidebroken";break;case"taglist":s="tagList"}t+=`&${s}=${encodeURIComponent(a)}`}return t.length?`?${t.slice(1)}`:""}}export{st as R,et as _,b as n};
